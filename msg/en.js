const T2C = {};
T2C.MSG = {}
T2C.MSG.currentLanguage = T2C.MSG.EN = {};

T2C.MSG.EN["TOOLBOX_CATEGORY_PSEUDO_JS_IO"] = "PseudoJS Input/Output";
T2C.MSG.EN["TOOLBOX_CATEGORY_JS_IO"] = "JavaScript Input/Output";
T2C.MSG.EN["TOOLBOX_CATEGORY_VARIABLES"] = "Variables";
T2C.MSG.EN["TOOLBOX_CATEGORY_MATH"] = "Math";
T2C.MSG.EN["TOOLBOX_CATEGORY_PSEUDO_JS_TEXT"] = "PseudoJS Text";
T2C.MSG.EN["TOOLBOX_CATEGORY_JS_TEXT"] = "JavaScript Text";
T2C.MSG.EN["TOOLBOX_CATEGORY_TYPE_IN_CODE"] = "Type in Code Blocks";
T2C.MSG.EN["TERMINAL_DISPLAY"] = "display";
T2C.MSG.EN["TEXT_PRINT_TITLE"] = "display(%1);";
T2C.MSG.EN["TEXT_PRINT_TOOLTIP"] = "Display the specified text, number or other value.";
T2C.MSG.EN["TERMINAL_GETINPUTBYASKING"] = "getInputByAsking";
T2C.MSG.EN["TEXT_INPUT_TITLE"] = "getInputByAsking(%1)";
T2C.MSG.EN["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt the user for some text.";
T2C.MSG.EN["TEXT_PLUS_TOOLTIP_TEXT"] = "join together text";
T2C.MSG.EN["TERMINAL_GETCHARACTERNUMBER"] = "getCharacterNUMBER";
T2C.MSG.EN["TEXT_T2C_CHARAT_TITLE"] = "%1.getCharacterNUMBER(%2)";
T2C.MSG.EN["TEXT_CHARAT_FROM_START_TOOLTIP"] = "Returns the letter at the specified position.";
T2C.MSG.EN["TERMINAL_GETTEXTFROM"] = "getTextFromPositionNUMBER";
T2C.MSG.EN["TERMINAL_GETTEXTFROMPOSITIONNUMBER"] = "getTextFromPositionNUMBER";
T2C.MSG.EN["TERMINAL_GETTEXTTO"] = "toPositionNUMBER";
T2C.MSG.EN["TERMINAL_TOPOSITIONNUMBER"] = "toPositionNUMBER";
T2C.MSG.EN["TERMINAL_SUBSTRINGTAIL"] = "";
T2C.MSG.EN["TERMINAL_TAK_PAEN"] = "";
T2C.MSG.EN["TEXT_T2C_GET_SUBSTRING_TITLE"] = "%1.getTextFromPositionNUMBER(%2).toPositionNUMBER(%3)";
T2C.MSG.EN["TEXT_T2C_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";
T2C.MSG.EN["TERMINAL_POSITIONNUMBEROFTEXT"] = "positionNumberOfTEXT";
T2C.MSG.EN["TERMINAL_FINDFIRSTOCCURRENCEOFTEXT"] = "positionNumberOfTEXT";
T2C.MSG.EN["TERMINAL_FINDFIRSTTAIL"] = "";
T2C.MSG.EN["TERMINAL_KE_STHITI_SANKHYA"] = "";
T2C.MSG.EN["TEXT_T2C_INDEXOF_TITLE"] = "%1.positionNumberOfTEXT(%2)";
T2C.MSG.EN["TEXT_T2C_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";
T2C.MSG.EN["TYPEIN_EXPRESSION_TITLE"] = "Enter Code Expression:";
T2C.MSG.EN["TYPEIN_EXPRESSION_TOOLTIP"] = "Type in a single code expression to be converted to blocks.";
T2C.MSG.EN["TYPEIN_STATEMENT_TITLE"] = "Enter Code Statement:";
T2C.MSG.EN["TYPEIN_STATEMENT_TOOLTIP"] = "Type in a single code statement to be converted to blocks.";
T2C.MSG.EN["BUTTON_CONVERT_TO_JS"] = "Convert PseudoJS blocks to JavaScript blocks";
T2C.MSG.EN["BUTTON_CONVERT_XML_TO_BLOCKS"] = "Convert XML to blocks";
T2C.MSG.EN["BUTTON_CONVERT_TEXT_TO_BLOCKS"] = "Convert text to blocks";
T2C.MSG.EN["BUTTON_RUN_CODE"] = "RUN BLOCK CODE!";
T2C.MSG.EN["HEADING_OUTPUT_APPEARS_BELOW"] = "Output will appear below";
T2C.MSG.EN["TEXTAREA_CODE_APPEARS_BELOW"] = "Code to appear here.";
T2C.MSG.EN["TEXTAREA_COPY_TEXT_HERE"] = "Copy text here to save/load blocks.";
T2C.MSG.EN["HEADING_BOTTOM_TEXT"] = "If you can describe the solution, you can code it. (At least that's the goal.)";
T2C.MSG.EN["CONFIRM_CONVERT_TEXT_TO_BLOCKS"] = "Clear workspace blocks and replace with blocks from below textual code?";
T2C.MSG.EN["TEXT_T2C_GET_STRING_LENGTH"] = ".length"
